{
  "openapi": "3.0.1",
  "info": {
    "version": "1.0.1",
    "title": "API documentation for project DrinkMaster.",
    "description": "DrinkMaster API BackEnd",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": ["application/json", "multipart/form-data"],
  "produces": ["application/json"],
  "servers": [
    { "url": "http://localhost:3000/" },
    { "url": "https://drink-code-backend.onrender.com" }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "Users",
      "description": "Endpoint for requesting information about the user"
    },
    {
      "name": "Drinks",
      "description": "Endpoint for requesting information about drinks"
    }
  ],
  "paths": {
    "/api/auth/signup": {
      "post": {
        "tags": ["Auth"],
        "summary": "SignUp new user",
        "parameters": [],
        "requestBody": {
          "description": "# Description of the request parameters:\n**name** - string, user name.\n**email** - string, user email.\n**password** - string, encrypted user password. \n**birthdate** - date, user's date of birth",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignUpRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignUpResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "409": {
            "description": "Email in use",
            "content": {}
          }
        }
      }
    },
    "/api/auth/signin": {
      "post": {
        "tags": ["Auth"],
        "summary": "SignIn existing user",
        "parameters": [],
        "requestBody": {
          "description": "# Description of the request parameters:\n**email** - string, user email.\n **password** - string, encrypted user password.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignInRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Created session for existing user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignInResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Bad request"
                    }
                  }
                },
                "example": {
                  "message": "Bad request"
                }
              }
            }
          },
          "401": {
            "description": "Email or password is wrong",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Email or password is wrong"
                    }
                  }
                },
                "example": {
                  "message": "Email or password is wrong"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Forbidden"
                    }
                  }
                },
                "example": {
                  "message": "Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Not found"
                    }
                  }
                },
                "example": {
                  "message": "Not found"
                }
              }
            }
          }
        }
      }
    },
    "/auth/signout": {
      "post": {
        "tags": ["Auth"],
        "summary": "Signs out user",
        "parameters": [],
        "description": "**Ендпоінт логауту** - це механізм виходу з системи, який припиняє дію сесії користувача та знищує токен доступу, що був виданий при попередній аутентифікації.\n**Опис:** Коли користувач натискає кнопку вийти з системи, він робить запит на URL/auth/signout з валідним токеном у заголовку Authorization. Сервер перевіряє валідність токена, якщо токен є дійсним, то сесія користувача закривається, токен видаляється і користувач повертається на сторінку входу в систему. Якщо токен не є валідним, то сервер повертає статус 401 і повідомляє про невалідність токена.",
        "security": [{ "Bearer": [] }],
        "responses": {
          "204": {
            "description": "User signed out"
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Description of the error."
                    }
                  }
                },
                "example": {
                  "message": "Not authorized."
                }
              }
            }
          }
        }
      }
    },
    "/users/current": {
      "get": {
        "tags": ["Users"],
        "summary": "Information about the user",
        "parameters": [],
        "description": "Information about the user",
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/currentResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Description of the error."
                    }
                  }
                },
                "example": {
                  "message": "Not authorized."
                }
              }
            }
          }
        }
      }
    },
    "/users/update": {
      "patch": {
        "tags": ["Users"],
        "summary": "Updating user information",
        "consumes": ["multipart/form-data", "application/json"],
        "parameters": [],
        "description": "Updating user information",
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "# Description of the request parameters:\n**name** - string, user name.",
          "content": {
            "multipart/form-data": {
              "schema": {
                "in": "formData",
                "type": "object",
                "properties": {
                  "image": {
                    "type": "file",
                    "format": "binary"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateUserResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Description of the error."
                    }
                  }
                },
                "example": {
                  "message": "Not authorized."
                }
              }
            }
          }
        }
      }
    },
    "/users/subscribe": {
      "post": {
        "tags": ["Users"],
        "summary": "Subscription to information mailing",
        "parameters": [],
        "description": "",
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "# Description of the request parameters:\n**email** - string, user email.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscribeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Subscribtion successful. Letters about subscribtion was sent to your email ..."
                    }
                  }
                },
                "example": {
                  "message": "Subscribtion successful. Letters about subscribtion was sent to your email ..."
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Description of the error."
                    }
                  }
                },
                "example": {
                  "message": "Not authorized."
                }
              }
            }
          }
        }
      }
    },
    "/api/drinks/{id}": {
      "get": {
        "tags": ["Drinks"],
        "summary": "Information about drink",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "description": "Drink's Id"
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DrinkInfoResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Description of the error."
                    }
                  }
                },
                "example": {
                  "message": "Not authorized."
                }
              }
            }
          },
          "404": {
            "description": "Is not valid Id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Description of the error."
                    }
                  }
                },
                "example": {
                  "message": "{drinkId} is not valid Id."
                }
              }
            }
          }
        }
      }
    },
    "/api/drinks/mainpage": {
      "get": {
        "summary": "Getting a list of cocktails with the newest ones at the beginning",
        "description": "Returns a list of cocktails where the newest ones are displayed at the beginning.",        
        "tags": ["Drinks"],
        "parameters": [],
        "security": [{"Bearer": []}],
        "responses": {
          "200": {
            "description": "Successful response with the list of drinks",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/ListOfDrinksResponse"}
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {  
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {"type": "string", "description": "Description of the error."}
                  },
                  "example": {"message": "Bad Request. Please check your request."}
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {"type": "string", "description": "Description of the error."}
                  },
                  "example": {"message": "Unauthorized. Missing or invalid authorization token."}
                }
              }
            }
          },
          "404": {
            "description": "Recipes Collection Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {"type": "string", "description": "Description of the error."}
                  },
                  "example": {"message": "The requested recipes collection was not found."}
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {"type": "string", "description": "Description of the error."}
                  },
                  "example": {"message": "Internal Server Error. Please try again later."}
                }
              }
            }
          }
        }
      }
    }
    },
  "components": {
    "schemas": {
      "SignUpRequest": {
        "type": "object",
        "required": ["name", "email", "password", "birthday"],
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Anton"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          },
          "birthday": {
            "type": "date",
            "description": "User's birthdate",
            "example": "01.01.2000"
          }
        }
      },
      "SignUpResponse": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Username",
                "example": "Anton"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email"
              },
              "avatarURL": {
                "type": "string",
                "description": "User's avatarURL",
                "example": "https://res.cloudinary.com/dk6hnmt4s/image/upload/f_auto,q_auto/v1/avatar/xclhvbf8zl0rllwgrbck"
              },
              "birthday": {
                "type": "date",
                "description": "User's birthdate",
                "example": "2000-01-01T05:00:00.000Z"
              }
            }
          }
        },
        "example": {
          "user": {
            "name": "Anton",
            "email": "user@example.com",
            "avatarURL": "https://res.cloudinary.com/dk6hnmt4s/image/upload/f_auto,q_auto/v1/avatar/xclhvbf8zl0rllwgrbck",
            "birthday": "01.01.2000"
          }
        }
      },
      "SignInRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "SignInResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "User's token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1ZDBhOTM1YWQyNzAxMzg2NzBjYzhhYiIsImlhdCI6MTcwODE3MzY4NSwiZXhwIjoxNzA4MjU2NDg1fQ.VlvFfOaONgtojDztPPMmgxZuHdlxO15oJe1DYe78BgA"
          },
          "user": {
            "name": {
              "type": "string",
              "description": "User's name",
              "example": "Anton"
            },
            "email": {
              "type": "string",
              "description": "User's email",
              "format": "email"
            },
            "avatarURL": {
              "type": "string",
              "description": "User's avatar",
              "example": "https://res.cloudinary.com/dk6hnmt4s/image/upload/f_auto,q_auto/v1/avatar/xclhvbf8zl0rllwgrbck"
            },
            "birthday": {
              "type": "date",
              "description": "User's birthdate",
              "example": "2000-01-01T05:00:00.000Z"
            }
          }
        },
        "example": {
          "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1ZDBhOTM1YWQyNzAxMzg2NzBjYzhhYiIsImlhdCI6MTcwODE3MzY4NSwiZXhwIjoxNzA4MjU2NDg1fQ.VlvFfOaONgtojDztPPMmgxZuHdlxO15oJe1DYe78BgA",
          "user": {
            "name": "Anton",
            "email": "user@example.com",
            "avatarURL": "https://res.cloudinary.com/dk6hnmt4s/image/upload/f_auto,q_auto/v1/avatar/xclhvbf8zl0rllwgrbck",
            "birthday": "2000-01-01T05:00:00.000Z"
          }
        }
      },
      "currentResponse": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Username",
                "example": "Anton"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email"
              },
              "avatarURL": {
                "type": "string",
                "description": "User's avatarURL",
                "example": "https://res.cloudinary.com/dk6hnmt4s/image/upload/f_auto,q_auto/v1/avatar/xclhvbf8zl0rllwgrbck"
              },
              "birthday": {
                "type": "date",
                "description": "User's birthdate",
                "example": "2000-01-01T05:00:00.000Z"
              }
            }
          }
        },
        "example": {
          "user": {
            "name": "Anton",
            "email": "user@example.com",
            "avatarURL": "https://res.cloudinary.com/dk6hnmt4s/image/upload/f_auto,q_auto/v1/avatar/xclhvbf8zl0rllwgrbck",
            "birthday": "01.01.2000"
          }
        }
      },
      "UpdateUserRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Username",
            "example": "Anton"
          }
        }
      },
      "UpdateUserResponse": {
        "type": "object",
        "properties": {
          "avatarURL": {
            "type": "string",
            "description": "User's avatar",
            "example": "https://res.cloudinary.com/dk6hnmt4s/image/upload/f_auto,q_auto/v1/avatar/xclhvbf8zl0rllwgrbck"
          },
          "name": {
            "type": "string",
            "description": "Username",
            "example": "Anton"
          }
        }
      },
      "SubscribeRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          }
        }
      },
      "DrinkInfoResponse": {
        "type": "object",
        "properties": {
          "drink": {
            "type": "object",
            "properties": {
              "drinkId": {
                "type": "string",
                "description": "Drink's Id",
                "example": "639b6de9ff77d221f190c56"
              }
            }
          }
        },
        "example": {
          "id": "639b6de9ff77d221f190c56",
          "drink": "Danbooka",
          "alcoholic": "Alcoholic",
          "glass": "Coffee Mug",
          "description": "Danbooka is a unique and flavorful cocktail that combines the richness of bourbon with the sweetness of apricot brandy and the tartness of lemon juice. It is made by shaking bourbon, apricot brandy, lemon juice, and simple syrup together with ice. The result is a complex and satisfying drink with a perfect balance of flavors. Sit back and savor the distinctive taste of Danbooka.",
          "instructions": "pour it in and mix it.",
          "drinkThumb": "https://ftp.goit.study/img/drinkify/recipes/Danbooka.jpg",
          "ingredients": [
            {
              "title": "Coffee",
              "measure": "3 parts ",
              "ingredientId": {
                "_id": "64aebb7f82d96cc69e0eb4e7",
                "title": "Coffee",
                "ingredientThumb": "https://ftp.goit.study/img/drinkify/ingredients/Coffee.png"
              }
            },
            {
              "title": "Everclear",
              "measure": "1 part ",
              "ingredientId": {
                "_id": "64aebb7f82d96cc69e0eb4f0",
                "title": "Everclear",
                "ingredientThumb": "https://ftp.goit.study/img/drinkify/ingredients/Everclear.png"
              }
            }
          ]
        }
      },

      
      "ListOfDrinksResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "_id": {"type": "string", "description": "Unique identifier for the drink", "example": "65d539ec33830ce177be159b"},
            "drink": {"type": "string", "description": "Name of the drink", "example": "TestVodka3"},
            "drinkAlternate": {"type": "string", "description": "Alternative name of the drink (if available)", "example": "AlternativeTest"},
            "tags": {"type": "string", "description": "Tags associated with the drink", "example": "Vodka, Test, Alcoholic"},
            "video": {"type": "string", "description": "Link to the video recipe (if available)", "example": "https://www.youtube.com/watch?v=example"},
            "category": {"type": "string", "description": "Category of the drink", "example": "Ordinary Drink"},
            "IBA": {"type": "string", "description": "International Bartenders Association classification (if specified)", "example": "Classic"},
            "alcoholic": {"type": "string", "description": "Indicates whether the drink is alcoholic", "example": "Alcoholic"},
            "glass": {"type": "string", "description": "Type of glass in which the drink is served", "example": "Highball glass"},
            "description": {"type": "string", "description": "Detailed description of the drink", "example": "A classic vodka-based cocktail."},
            "instruction": {"type": "string", "description": "Instructions for preparing the drink", "example": "1. Mix vodka and soda. 2. Garnish with a lemon slice."},
            "instructionsES": {"type": "string", "description": "Instructions in Spanish (if available)", "example": "Instrucciones en español."},
            "instructionsDE": {"type": "string", "description": "Instructions in German (if available)", "example": "Anweisungen auf Deutsch."},
            "instructionsFR": {"type": "string", "description": "Instructions in French (if available)", "example": "Instructions en français."},
            "instructionsIT": {"type": "string", "description": "Instructions in Italian (if available)", "example": "Istruzioni in italiano."},
            "instructionsRU": {"type": "string", "description": "Instructions in Russian (if available)", "example": "Инструкции на русском языке."},
            "instructionsPL": {"type": "string", "description": "Instructions in Polish (if available)", "example": "Instrukcje po polsku."},
            "instructionsUK": {"type": "string", "description": "Instructions in Ukrainian (if available)", "example": "Інструкції українською мовою."},
            "drinkThumb": {"type": "string", "description": "Link to the image of the drink (if available)", "example": "https://example.com/drink.jpg"},
            "ingredients": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "ingredientId": {"type": "string", "description": "Unique identifier of the ingredient", "example": "6068f67ea04f7a001fb92f24"},
                  "_id": {"type": "string", "description": "Unique identifier of the association with the drink", "example": "65d539ec33830ce177be159c"}
                }
              }
            },
            "shortDescription": {"type": "string", "description": "Brief description of the drink", "example": "A refreshing vodka cocktail."},
            "owner": {"type": "string", "description": "Unique identifier of the drink owner", "example": "65d2a0f8f692541d5ef893fb"},
            "favorite": {"type": "array", "description": "List of users who have added the drink to their favorites", "example": ["user1", "user2"]},
            "createdAt": {"type": "string", "format": "date-time", "description": "Date and time when the drink was created", "example": "2024-02-20T23:46:52.361Z"},
            "updatedAt": {"type": "string", "format": "date-time", "description": "Date and time of the last update to the drink", "example": "2024-02-20T23:46:52.361Z"}
          }
        },
        "example": [
          {
            "_id": "65d539ec33830ce177be159b",
            "drink": "TestVodka3",
            "drinkAlternate": "AlternativeTest",
            "tags": "Vodka, Test, Alcoholic",
            "video": "https://www.youtube.com/watch?v=example",
            "category": "Ordinary Drink",
            "IBA": "Classic",
            "alcoholic": "Alcoholic",
            "glass": "Highball glass",
            "description": "A classic vodka-based cocktail.",
            "instruction": "1. Mix vodka and soda. 2. Garnish with a lemon slice.",
            "instructionsES": "Instrucciones en español.",
            "instructionsDE": "Anweisungen auf Deutsch.",
            "instructionsFR": "Instructions en français.",
            "instructionsIT": "Istruzioni in italiano.",
            "instructionsRU": "Инструкции на русском языке.",
            "instructionsPL": "Instrukcje po polsku.",
            "instructionsUK": "Інструкції українською мовою.",
            "drinkThumb": "https://example.com/drink.jpg",
            "ingredients": [
              {"ingredientId": "6068f67ea04f7a001fb92f24", "_id": "65d539ec33830ce177be159c"},
              {"ingredientId": "6068f67ea04f7a001fb92f25", "_id": "65d539ec33830ce177be159d"}
            ],
            "shortDescription": "A refreshing vodka cocktail.",
            "owner": "65d2a0f8f692541d5ef893fb",
            "favorite": ["user1", "user2"],
            "createdAt": "2024-02-20T23:46:52.361Z",
            "updatedAt": "2024-02-20T23:46:52.361Z"
          }
        ],
        "description": "An array of drink objects."
  }
},
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "securityDefinitions": {
    "BearerAuth": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  }
}
